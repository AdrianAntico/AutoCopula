% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_scoring.R
\name{ModelScorer}
\alias{ModelScorer}
\title{ModelScorer}
\description{
ModelScorer

ModelScorer
}
\details{
An R6 class to score copula models on new data, perform predictions,
generate simulations, and visualize the results.

This method generates large-scale simulations by splitting the total number of samples
into smaller batches. If \code{parallel} is set to TRUE, it uses the \code{future.apply} package to
process batches in parallel. On sequential processing, batches are processed one at a time.
The function ensures that all parallel sessions are closed upon completion or in the case of an error.

The \code{conditional_range_prediction()} function generates conditional samples from a fitted copula model
for all combinations of specified ranges for multiple variables. This batch version is particularly
useful for scenarios where multiple variables are partially observed or constrained within specific
ranges, and predictions or simulations are required for the remaining variables across all combinations.
\itemize{
\item \strong{Input Parameters}:
\itemize{
\item \code{model_name}: The name of the fitted copula model from which predictions will be generated.
\item \code{known_ranges}: A named list where:
\itemize{
\item Each key represents a variable name.
\item The value is either:
\itemize{
\item \strong{Single Value}: Represents an exact observation for that variable (e.g., \code{X = 0.5}).
\item \strong{Range}: A numeric vector (e.g., \code{X = c(0.4, 0.6)}) representing the range within which the variable
is constrained.
}
}
\item \code{n}: The number of conditional samples to generate for each combination.
\item \code{parallel}: Logical. If \code{TRUE}, computations are distributed across multiple threads for efficiency.
\item \code{threads}: Integer. Specifies the number of threads to use if \code{parallel = TRUE}. Defaults to one less than
the number of available cores if not specified.
}
\item \strong{Process}:
\enumerate{
\item Validate that \code{model_name} corresponds to a fitted copula model and that all \code{known_ranges} variables
match the dataset used for model fitting.
\item Generate all combinations of values based on \code{known_ranges}:
\itemize{
\item For single values, treat them as exact observations.
\item For ranges, sample uniformly within the range for each combination.
}
\item For each combination of known values:
\itemize{
\item Dynamically select the appropriate private conditional sampling method for the copula family.
\item Compute the conditional distribution of the remaining variables given the known values.
}
\item Combine the results into a unified \code{data.table} containing all conditional samples.
}
\item \strong{Output}:
\itemize{
\item A \code{data.table} containing:
\itemize{
\item The conditional samples for the remaining variables.
\item The fixed or sampled values for the known variables for each combination.
\item A \code{batch_id} column that uniquely identifies each combination of known variable values.
}
}
\item \strong{Error Handling}:
\itemize{
\item If \code{model_name} is not a supported copula type or \code{known_ranges} contains invalid inputs, the
function returns \code{NULL} with an appropriate warning or error message.
}
\item \strong{Applications}:
\itemize{
\item Suitable for use cases in finance, insurance, and other domains requiring predictions under multiple
partially observed or constrained conditions. The batch version allows for efficient exploration of
the conditional distribution over a wide range of possible scenarios.
}
}

The \code{hybrid_range_simulation()} function extends \code{hybrid_simulation()} by enabling simulations
over a range of values for one known variable. It generates both conditional and unconditional
samples for each value in the specified range and combines the results.
\itemize{
\item \strong{Input Parameters}:
\itemize{
\item \code{model_name}: The name of the fitted copula model to use for simulations.
\item \code{known_ranges}: List containing name as key and variable values as the values
\item \code{n}: Number of instances to simulate for each known value.
\item \code{parallel}: Logical indicating whether to run the simulation in parallel. Default is \code{FALSE}.
\item \code{threads}: Number of parallel threads to use if \code{parallel = TRUE}. Defaults to available cores minus one.
}
\item \strong{Output}:
\itemize{
\item A \code{data.table} containing the hybrid simulation results for all values in the specified range.
}
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{fit_results}}{A list of fitted copula model objects.}

\item{\code{data}}{Scoring data}

\item{\code{score_plots}}{A list of plots visualizing scored data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ModelScorer-new}{\code{ModelScorer$new()}}
\item \href{#method-ModelScorer-single_instance_prediction}{\code{ModelScorer$single_instance_prediction()}}
\item \href{#method-ModelScorer-batch_prediction}{\code{ModelScorer$batch_prediction()}}
\item \href{#method-ModelScorer-large_scale_simulation}{\code{ModelScorer$large_scale_simulation()}}
\item \href{#method-ModelScorer-conditional_range_prediction}{\code{ModelScorer$conditional_range_prediction()}}
\item \href{#method-ModelScorer-hybrid_range_simulation}{\code{ModelScorer$hybrid_range_simulation()}}
\item \href{#method-ModelScorer-clone}{\code{ModelScorer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-new"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$new(fit_results, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fit_results}}{A list of fitted copula model objects.}

\item{\code{data}}{data for scoring a single instance of copula models}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the ModelScorer class.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-single_instance_prediction"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-single_instance_prediction}{}}}
\subsection{Method \code{single_instance_prediction()}}{
Generate a single instance prediction using the entire model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$single_instance_prediction(model_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{Name of the model to use.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A single joint prediction as a named list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-batch_prediction"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-batch_prediction}{}}}
\subsection{Method \code{batch_prediction()}}{
Generate batch predictions using the entire model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$batch_prediction(model_name, n = 100)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{Name of the model to use.}

\item{\code{n}}{Number of instances to generate.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table of batch predictions.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-large_scale_simulation"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-large_scale_simulation}{}}}
\subsection{Method \code{large_scale_simulation()}}{
Perform large-scale simulations using fitted copula models.
The simulation can be processed sequentially or in parallel, with user-defined batch sizes and thread counts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$large_scale_simulation(
  model_name,
  batches = 10,
  batch_size = 1000,
  parallel = FALSE,
  threads = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{A string specifying the name of the fitted model to use.}

\item{\code{batches}}{An integer specifying the number of batches to process. Default is 10.}

\item{\code{batch_size}}{An integer specifying the number of samples per batch. Default is 1000.}

\item{\code{parallel}}{A logical value indicating whether to use parallel processing. Default is FALSE.}

\item{\code{threads}}{An integer specifying the number of threads to use for parallel processing.
If NULL, defaults to the number of available cores minus one.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.table} containing all simulated values, with a \code{BatchID} column to indicate the batch each row belongs to.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-conditional_range_prediction"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-conditional_range_prediction}{}}}
\subsection{Method \code{conditional_range_prediction()}}{
Generate conditional predictions for a range of known values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$conditional_range_prediction(
  model_name,
  known_ranges,
  n = 100,
  parallel = FALSE,
  threads = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{Name of the model to use.}

\item{\code{known_ranges}}{List with variable name as key and variable values as the list values}

\item{\code{n}}{Number of samples to generate for each value in the range.}

\item{\code{parallel}}{Logical, whether to process the range values in parallel. Default is \code{FALSE}.}

\item{\code{threads}}{Integer, the number of threads to use if \code{parallel = TRUE}. Defaults to all available cores minus one.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.table} containing conditional predictions for the specified range.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-hybrid_range_simulation"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-hybrid_range_simulation}{}}}
\subsection{Method \code{hybrid_range_simulation()}}{
Generate hybrid simulations for a range of known values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$hybrid_range_simulation(
  model_name,
  known_ranges,
  n = 100,
  parallel = FALSE,
  threads = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{Name of the model to use.}

\item{\code{known_ranges}}{List with variable name as key and variable values as the list values}

\item{\code{n}}{Number of instances to simulate for each known value.}

\item{\code{parallel}}{Logical, whether to use parallel processing.}

\item{\code{threads}}{Number of threads to use for parallel processing. Defaults to available cores minus one.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table of hybrid simulations for the specified range of values.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ModelScorer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ModelScorer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelScorer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
